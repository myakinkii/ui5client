<core:FragmentDefinition
	xmlns="sap.m"
	xmlns:l="sap.ui.layout"
	xmlns:core="sap.ui.core">
	<l:Grid containerQuery="true" hSpacing="0" vSpacing="0" defaultSpan="L6 M6 S12" >

		<FlexBox alignItems="Start" justifyContent="SpaceBetween" 
			busy="{ path: '$this>state', formatter: '.formatBusyState' }"
			busyIndicatorDelay="0" >
			<VBox>
				<ObjectStatus text="[{$this>level}] {$this>name}" class="sapUiSmallMarginBegin sapUiSmallMarginTop" />
				<ObjectIdentifier class="sapUiSmallMarginBegin statsFontLightBigger"
					text="{i18n>patk}: +{$this>patk} {i18n>pdef}: +{$this>pdef} &#10;&#13; {i18n>maxhp}: +{$this>maxhp} {i18n>speed}: +{$this>speed}" />
			</VBox>
			<HBox>
				<VBox>
					<ObjectStatus class="sapUiSmallMarginBegin sapUiSmallMarginTop"
						text="{ path: '$this>state', formatter: '.formatBattleStateText' }"
						state="{ path: '$this>state', formatter: '.formatBattleState' }" 
						icon="{ path: '$this>state', formatter: '.formatBattleStateIcon'}" />
					<RatingIndicator class="sapUiSmallMarginBegin" enabled="false" 
						iconSize="12px" maxValue="{$this>maxAP}" value="{$this>curAP}"
						iconSelected="sap-icon://rhombus-milestone-2" iconUnselected="sap-icon://rhombus-milestone" />
				</VBox>
			<ObjectNumber class="sapUiSmallMargin hpFontBig"
				number="{$this>hp}" unit="{i18n>hp}" state="{ path: '$this>hp', formatter: '.formatHP'}" />
			</HBox>	
		</FlexBox>
		
		<FlexBox alignItems="Start" justifyContent="End" >
		<VBox class="sapUiSmallMarginBegin">
			<HBox justifyContent="End" visible="{$this>castMode}" class="sapUiSizeCompact">
				<Button text="-{i18n>patk}" press=".performCast" type="Reject">
					<customData> <core:CustomData key="spell" value="patkdec" /> </customData>
				</Button>
				<Button text="-{i18n>pdef}" press=".performCast" type="Reject">
					<customData> <core:CustomData key="spell" value="pdefdec" /> </customData>
				</Button>
				<Button text="-{i18n>speed}" press=".performCast" type="Reject">
					<customData> <core:CustomData key="spell" value="speeddec" /> </customData>
				</Button>
				
				<Button text="+{i18n>patk}" press=".performCast" type="Accept">
					<customData> <core:CustomData key="spell" value="patkinc" /> </customData>
				</Button>
				<Button text="+{i18n>pdef}" press=".performCast" type="Accept">
					<customData> <core:CustomData key="spell" value="pdefinc" /> </customData>
				</Button>
				<Button text="+{i18n>speed}" press=".performCast" type="Accept">
					<customData> <core:CustomData key="spell" value="speedinc" /> </customData>
				</Button>				
			</HBox>
			<HBox justifyContent="End" visible="{= ${$this>selfHP}>0 &amp;&amp; !${$this>castMode}}">
				<Button visible="{parts:[{path:'$this>attackers'},{path:'$this>self'},{path:'$this>name'}],formatter:'.formatParryEvadeButton'}"
						enabled="{parts:[{path:'$this>selfState'},{path:'$this>selfAP'}],formatter:'.formatCanParryEvade'}"
						press="performAction" icon="sap-icon://journey-change" type="Emphasized" >
					<customData> <core:CustomData key="action" value="parry" /> </customData>
				</Button>
				<Button visible="{parts:[{path:'$this>attackers'},{path:'$this>self'},{path:'$this>name'}],formatter:'.formatParryEvadeButton'}"
						enabled="{parts:[{path:'$this>selfState'},{path:'$this>selfAP'}],formatter:'.formatCanParryEvade'}"
						press="performAction" icon="sap-icon://physical-activity" type="Emphasized" >
					<customData> <core:CustomData key="action" value="evade" /> </customData>
				</Button>
				<Button visible="{parts:[{path:'$this>self'},{path:'$this>name'},{path:'$this>mobFlag'}],formatter:'.formatDefendButton'}"
						enabled="{parts:[{path:'$this>selfState'},{path:'$this>selfAP'},{path:'$this>attackers'},{path:'$this>selfTarget'},{path:'$this>name'}],formatter:'.formatCanDefend'}"
						press="performAction" icon="sap-icon://shield" type="Default" > 
					<customData> <core:CustomData key="action" value="defend" /> </customData>
				</Button>
				<Button visible="{parts:[{path:'$this>self'},{path:'$this>name'},{path:'$this>mobFlag'}],formatter:'.formatAssistButton'}"
						enabled="{parts:[{path:'$this>selfState'},{path:'$this>selfAP'},{path:'$this>state'},{path:'$this>target'},{path:'$this>self'}],formatter:'.formatCanAssist'}"
						press="performAction" icon="sap-icon://add" type="Default" >
					<customData> <core:CustomData key="action" value="assist" /> </customData>
				</Button>

				<Button visible="{=  !!${$this>mobFlag} }" enabled="{/canFlee}"
						press="performAction" icon="sap-icon://arrow-left" type="Default" >
					<customData> <core:CustomData key="action" value="flee" /> </customData>
				</Button>
				<Button visible="{=  !!${$this>mobFlag} }" enabled="{/canSteal}"
						press="performAction" icon="sap-icon://burglary" type="Default" >
					<customData> <core:CustomData key="action" value="steal" /> </customData>
				</Button>

				<Button visible="{parts:[{path:'$this>self'},{path:'$this>name'}],formatter:'.formatCastButton'}"
						enabled="{parts:[{path:'$this>selfState'},{path:'$this>selfMP'}],formatter:'.formatCanCast'}"
						press="performAction" icon="sap-icon://activate" type="Accept" >
					<customData> <core:CustomData key="action" value="cast" /> </customData>
				</Button>
				<Button visible="{parts:[{path:'$this>coopFlag'},{path:'$this>self'},{path:'$this>name'},{path:'$this>mobFlag'}],formatter:'.formatHitButton'}"
						enabled="{parts:[{path:'$this>selfState'},{path:'$this>selfAP'}],formatter:'.formatCanHit'}"
						press="performAction" icon="sap-icon://scissors" type="Reject" >
					<customData> <core:CustomData key="action" value="hit" /> </customData>
				</Button>				
			</HBox>
			<HBox visible="{= ${$this>selfHP}===0 }" class="sapUiSmallMarginTop"/>
			<ObjectStatus text="{$this>currentEventText}" state="{ parts:[{path:'$this>state'},{path:'$this>target'},{path:'$this>self'},{path:'$this>currentEventKey'}], formatter: '.formatBattleEventState'}" /> 
		</VBox>
		</FlexBox>

	</l:Grid>
</core:FragmentDefinition>	